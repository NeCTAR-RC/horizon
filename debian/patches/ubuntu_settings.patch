--- a/openstack_dashboard/local/local_settings.py.example
+++ b/openstack_dashboard/local/local_settings.py.example
@@ -20,7 +20,7 @@
 
 from openstack_dashboard.settings import HORIZON_CONFIG
 
-DEBUG = True
+DEBUG = False
 
 # This setting controls whether or not compression is enabled. Disabling
 # compression makes Horizon considerably slower, but makes it much easier
@@ -85,19 +85,25 @@
 # (usually behind a load-balancer). Either you have to make sure that a session
 # gets all requests routed to the same dashboard instance or you set the same
 # SECRET_KEY for all of them.
-SECRET_KEY = secret_key.generate_or_read_from_file(
-    os.path.join(LOCAL_PATH, '.secret_key_store'))
+SECRET_KEY = secret_key.generate_or_read_from_file('/var/lib/openstack-dashboard/secret_key')
 
 # We recommend you use memcached for development; otherwise after every reload
 # of the django development server, you will have to login again. To use
 # memcached set CACHES to something like below.
 # For more information, see
 # https://docs.djangoproject.com/en/1.11/topics/http/sessions/.
+
+CACHES = {
+    'default': {
+        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
+        'LOCATION': '127.0.0.1:11211',
+    },
+}
+
 #CACHES = {
 #    'default': {
-#        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
-#        'LOCATION': '127.0.0.1:11211',
-#    },
+#        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
+#    }
 #}
 
 # If you use ``tox -e runserver`` for developments,then configure
@@ -400,3 +406,21 @@
 # Help URL can be made available for the client. To provide a help URL, edit the
 # following attribute to the URL of your choice.
 #HORIZON_CONFIG["help_url"] = "http://openstack.mycompany.org"
+
+###############################################################################
+# Ubuntu Settings
+###############################################################################
+
+ # The default theme if no cookie is present
+DEFAULT_THEME = 'default'
+
+# Default Ubuntu apache configuration uses /horizon as the application root.
+WEBROOT='/horizon/'
+
+# By default, validation of the HTTP Host header is disabled.  Production
+# installations should have this set accordingly.  For more information
+# see https://docs.djangoproject.com/en/dev/ref/settings/.
+ALLOWED_HOSTS = '*'
+
+# Compress all assets offline as part of packaging installation
+COMPRESS_OFFLINE = True
--- a/openstack_dashboard/settings.py
+++ b/openstack_dashboard/settings.py
@@ -313,7 +313,7 @@
     MEDIA_URL = WEBROOT + 'media/'
 
 if STATIC_ROOT is None:
-    STATIC_ROOT = os.path.abspath(os.path.join(ROOT_PATH, '..', 'static'))
+    STATIC_ROOT = '/var/lib/openstack-dashboard/static'
 
 if STATIC_URL is None:
     STATIC_URL = WEBROOT + 'static/'
@@ -340,8 +340,7 @@
 
     # pylint: disable=ungrouped-imports
     from horizon.utils import secret_key
-    SECRET_KEY = secret_key.generate_or_read_from_file(os.path.join(LOCAL_PATH,
-                                                       '.secret_key_store'))
+    SECRET_KEY = secret_key.generate_or_read_from_file('/var/lib/openstack-dashboard/secret_key')
 
 # populate HORIZON_CONFIG with auto-discovered JavaScript sources, mock files,
 # specs files and external templates.
--- a/horizon/defaults.py
+++ b/horizon/defaults.py
@@ -38,7 +38,8 @@
 # It seems ROOT_PATH is used for various purposes.
 # ROOT_PATH
 
-WEBROOT = '/'
+# Default Ubuntu apache configuration uses /horizon as the application root.
+WEBROOT = '/horizon/'
 LOGOUT_URL = WEBROOT + 'auth/logout/'
 
 POLICY_CHECK_FUNCTION = None
